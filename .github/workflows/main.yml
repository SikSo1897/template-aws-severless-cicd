name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      # step 1
      - uses: actions/checkout@v3

      # step 2
      - name: Install poetry
        run: pipx install poetry

      # step 3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "poetry"

      # step 4
      - name: Install dependencies
        run: poetry install

      # step 5
      - name: Run pytest
        run: poetry run pytest

      # step 6
      - name: Create Zipfile archive of dependencies
        run: |
          find `poetry env info -p` -type d -name 'site-packages' | xargs zip -9r api.zip

      # Step 7
      - name: Add App to Zip file
        run: zip -g api.zip -r app

      # Step 8
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api.zip


  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # - name: Download Lambda api.zip
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: api
      
      # move artifact -----
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v3
        with:
          name: api
          
      - name: Display structure of downloaded files
        run: ls -R
      # -----

      # - name: Upload to S3
      #   run: aws s3 cp api.zip s3://medium-aws-fastapi/api.zip
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # - name: Deploy new Lambda
      #   run: |
      #     aws lambda update-function-code
      #       --function-name serverless-api
      #       --s3-bucket medium-aws-fastapi
      #       --s3-key api.zip
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
